datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Situacao {
  ATIVO
  INATIVO
  PENDENTE
}

model Usuario {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  foto          String?  @db.Text
  nome          String   @db.VarChar(255)
  cpf_cnh       String   @unique @db.VarChar(11)
  email         String   @unique @db.VarChar(254)
  senha         String   @db.VarChar(60)
  situacao      Situacao @default(ATIVO)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_cargo BigInt? @db.BigInt
  cargo    Cargo?  @relation(fields: [id_cargo], references: [id])

  idosos              Idoso[]
  prontuarios         Prontuario[]
  relatorios_pia      RelatorioPia[]
  fichas_nutricionais FichaNutricional[]
  perroca             Perroca[]
  escala_braden       EscalaBraden[]

  @@map("usuario")
}

model Idoso {
  id                        BigInt   @id @default(autoincrement()) @db.BigInt
  uid                       String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  foto                      String?  @db.Text
  nome_completo             String   @db.VarChar(255)
  data_nascimento           DateTime @db.Date()
  naturalidade              String   @db.VarChar(100)
  estado                    String   @db.VarChar(2)
  pais                      String   @db.VarChar(100)
  estado_civil              String   @db.VarChar(20)
  religiao                  String   @db.VarChar(50)
  escolaridade              String   @db.VarChar(50)
  nome_pai                  String   @db.VarChar(255)
  nome_mae                  String   @db.VarChar(255)
  data_ingresso             DateTime @db.Date()
  cpf                       String?  @unique @db.VarChar(11)
  cnh                       String?  @unique @db.VarChar(8)
  rg                        String?  @unique @db.VarChar(10)
  rg_orgao_expedidor        String?  @db.VarChar(255)
  titulo_eleitor            String?  @db.VarChar(12)
  titulo_eleitor_secao      String?  @db.VarChar(4)
  titulo_eleitor_zona       String?  @db.VarChar(3)
  certidao_nascimento       String?  @db.VarChar(30)
  certidao_nascimento_folha String?  @db.VarChar(20)
  certidao_nascimento_livro String?  @db.VarChar(20)
  certidao_casamento        String?  @db.VarChar(30)
  certidao_casamento_folha  String?  @db.VarChar(20)
  certidao_casamento_livro  String?  @db.VarChar(20)
  situacao                  Situacao @default(ATIVO)
  motivo_inativacao         String?  @db.VarChar(100)
  criado_em                 DateTime @default(now()) @db.Timestamp()
  atualizado_em             DateTime @updatedAt @db.Timestamp()

  id_usuario BigInt  @db.BigInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id])

  responsaveis_idoso  ResponsavelIdoso[]
  prontuarios         Prontuario[]
  relatorios_pia      RelatorioPia[]
  fichas_nutricionais FichaNutricional[]
  perroca             Perroca[]
  escala_braden       EscalaBraden[]

  @@map("idoso")
}

model ResponsavelIdoso {
  id              BigInt   @id @default(autoincrement()) @db.BigInt
  uid             String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  parentesco      String   @db.VarChar(50)
  nome_completo   String   @db.VarChar(255)
  endereco        String   @db.VarChar(100)
  endereco_numero String   @db.VarChar(20)
  bairro          String   @db.VarChar(50)
  cep             String   @db.VarChar(50)
  estado          String   @db.VarChar(2)
  telefone_1      String   @db.VarChar(20)
  telefone_2      String?  @db.VarChar(20)
  criado_em       DateTime @default(now()) @db.Timestamp()
  atualizado_em   DateTime @updatedAt @db.Timestamp()

  id_idoso BigInt @db.BigInt
  idoso    Idoso  @relation(fields: [id_idoso], references: [id])

  @@map("responsavel_idoso")
}

model Cargo {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome          String   @db.VarChar(255)
  situacao      Situacao @default(ATIVO)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  usuario         Usuario[]
  cargo_permissao CargoPermissao[]

  @@map("cargo")
}

model CargoPermissao {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ativo         Boolean  @default(true)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_cargo BigInt @db.BigInt
  cargo    Cargo  @relation(fields: [id_cargo], references: [id])

  id_permissao BigInt    @db.BigInt
  permissao    Permissao @relation(fields: [id_permissao], references: [id])

  @@map("cargo_permissao")
}

model Permissao {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome          String   @db.VarChar(255)
  codigo        Int      @db.Integer()
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_grupo_permissao BigInt         @db.BigInt
  grupo_permissao    GrupoPermissao @relation(fields: [id_grupo_permissao], references: [id])

  cargo_permissao CargoPermissao[]

  @@map("permissao")
}

model GrupoPermissao {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome          String   @db.VarChar(255)
  codigo        Int      @db.Integer()
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  permissao Permissao[]

  @@map("grupo_permissao")
}

model Prontuario {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  relatorio     String   @db.Text
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_idoso BigInt @db.BigInt
  idoso    Idoso  @relation(fields: [id_idoso], references: [id])

  id_usuario BigInt  @db.BigInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id])

  @@map("prontuario")
}

model ModeloRelatorioPia {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome          String   @db.VarChar(255)
  versao        Int      @db.Integer()
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  perguntas  ModeloRelatorioPiaPergunta[]
  relatorios RelatorioPia[]

  @@map("modelo_relatorio_pia")
}

model ModeloRelatorioPiaPergunta {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pergunta      String   @db.VarChar(255)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_modelo BigInt             @db.BigInt
  modelo    ModeloRelatorioPia @relation(fields: [id_modelo], references: [id])

  relatorios RelatorioPiaPergunta[]

  @@map("modelo_relatorio_pia_pergunta")
}

model RelatorioPia {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome          String   @db.VarChar(255)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_modelo BigInt             @db.BigInt
  modelo    ModeloRelatorioPia @relation(fields: [id_modelo], references: [id])

  id_usuario BigInt  @db.BigInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id])

  id_idoso BigInt @db.BigInt
  idoso    Idoso  @relation(fields: [id_idoso], references: [id])

  pergunta RelatorioPiaPergunta[]

  @@map("relatorio_pia")
}

model RelatorioPiaPergunta {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_pergunta BigInt                     @db.BigInt
  pergunta    ModeloRelatorioPiaPergunta @relation(fields: [id_pergunta], references: [id])

  id_relatorio BigInt       @db.BigInt
  relatorio    RelatorioPia @relation(fields: [id_relatorio], references: [id])

  respostas RelatorioPiaResposta?

  @@map("relatorio_pia_pergunta")
}

model RelatorioPiaResposta {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  resposta      Boolean  @db.Boolean
  descricao     String?  @db.VarChar(500)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_pergunta BigInt               @unique @db.BigInt
  Pergunta    RelatorioPiaPergunta @relation(fields: [id_pergunta], references: [id])

  @@map("relatorio_pia_resposta")
}

model FichaNutricional {
  id                      BigInt   @id @default(autoincrement()) @db.BigInt
  uid                     String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  diagnostico_clinico     String?  @db.VarChar(255)
  edema                   String?  @db.VarChar(255)
  local_edema             String?  @db.VarChar(255)
  ascite                  String?  @db.VarChar(255)
  diagnostico_nutricional String?  @db.VarChar(255)
  caloria                 String?  @db.VarChar(255)
  caloria_metodo          String?  @db.VarChar(255)
  proteina                String?  @db.VarChar(255)
  proteina_metodo         String?  @db.VarChar(255)
  hidrica                 String?  @db.VarChar(255)
  hidrica_observacao      String?  @db.VarChar(255)
  criado_em               DateTime @default(now()) @db.Timestamp
  atualizado_em           DateTime @updatedAt @db.Timestamp

  id_idoso BigInt @db.BigInt
  idoso    Idoso  @relation(fields: [id_idoso], references: [id])

  id_usuario BigInt  @db.BigInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id])

  antropometria_admissional     AntropometriaAdmissional?
  conduta_nutricional           CondutaNutricional[]
  quadro_clinico                QuadroClinico[]
  acompanhamento_antropometrico AcompanhamentoAntropometrico[]

  @@map("ficha_nutricional")
}

model AntropometriaAdmissional {
  id                             BigInt   @id @default(autoincrement()) @db.BigInt
  uid                            String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  triagem                        String   @db.VarChar(255)
  escore                         Int      @db.Integer
  triagem_classificacao          String   @db.VarChar(255)
  peso_atual                     Float
  peso_estimado                  Float?
  pp_kg                          Float?
  pp_porcentagem                 String?  @db.VarChar(255)
  pp_tempo                       String?  @db.VarChar(255)
  pp_classificacao               String?  @db.VarChar(255)
  altura_atual                   Float
  altura_estimada                Float?
  altura_aj                      String?  @db.VarChar(255)
  circ_braco                     Float
  circ_braco_percentil           String?  @db.VarChar(255)
  circ_braco_classificacao       String?  @db.VarChar(255)
  circ_panturrilha               Float
  circ_panturrilha_percentil     String?  @db.VarChar(255)
  circ_panturrilha_classificacao String?  @db.VarChar(255)
  circ_abdominal                 Float?
  criado_em                      DateTime @default(now()) @db.Timestamp
  atualizado_em                  DateTime @updatedAt @db.Timestamp

  id_ficha_nutricional BigInt           @unique @db.BigInt
  ficha_nutricional    FichaNutricional @relation(fields: [id_ficha_nutricional], references: [id])

  @@map("antropometria_admissional")
}

model CondutaNutricional {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  data          DateTime @db.Date
  dieta         String?  @db.VarChar(255)
  volume        String?  @db.VarChar(255)
  fracionamento String?  @db.VarChar(255)
  kcal_dia      String?  @db.VarChar(255)
  ptn_dia       Int?     @db.Integer
  agua_ml       String?  @db.VarChar(255)
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_ficha_nutricional BigInt           @unique @db.BigInt
  ficha_nutricional    FichaNutricional @relation(fields: [id_ficha_nutricional], references: [id])

  @@map("conduta_nutricional")
}

model QuadroClinico {
  id                  BigInt   @id @default(autoincrement()) @db.BigInt
  uid                 String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  data                DateTime @db.Date
  aceitacao_alimentar String?  @db.VarChar(255)
  suplemento_oral     String?  @db.VarChar(255)
  apetite             String?  @db.VarChar(255)
  mastigacao          String?  @db.VarChar(255)
  disfagia            String?  @db.VarChar(255)
  odinofagia          String?  @db.VarChar(255)
  dispneia            String?  @db.VarChar(255)
  nausea_vomito       String?  @db.VarChar(255)
  dor_abdominal       String?  @db.VarChar(255)
  evacuacao           String?  @db.VarChar(255)
  diurese             String?  @db.VarChar(255)
  observacao          String?  @db.Text
  criado_em           DateTime @default(now()) @db.Timestamp
  atualizado_em       DateTime @updatedAt @db.Timestamp

  id_ficha_nutricional BigInt           @unique @db.BigInt
  ficha_nutricional    FichaNutricional @relation(fields: [id_ficha_nutricional], references: [id])

  @@map("quadro_clinico")
}

model AcompanhamentoAntropometrico {
  id            BigInt   @id @default(autoincrement()) @db.BigInt
  uid           String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  data          DateTime @db.Date
  altura        Float
  peso          Float
  ascite        String?  @db.VarChar(255)
  edema         String?  @db.VarChar(255)
  imc           Float
  ca            Float?
  cb            Float?
  cp            Float?
  observacao    String?  @db.Text
  criado_em     DateTime @default(now()) @db.Timestamp
  atualizado_em DateTime @updatedAt @db.Timestamp

  id_ficha_nutricional BigInt           @unique @db.BigInt
  ficha_nutricional    FichaNutricional @relation(fields: [id_ficha_nutricional], references: [id])

  @@map("acompanhamento_antropometrico")
}

model Perroca {
  id                         BigInt   @id @default(autoincrement()) @db.BigInt
  uid                        String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  estado_metal_conciencia    Int      @db.Integer
  oxigenacao                 Int      @db.Integer
  sinais_vitais              Int      @db.Integer
  nutricao_hidratacao        Int      @db.Integer
  motilidade                 Int      @db.Integer
  locomocao                  Int      @db.Integer
  cuidado_corporal           Int      @db.Integer
  eliminacoes                Int      @db.Integer
  terapeutica                Int      @db.Integer
  educacao_saude             Int      @db.Integer
  comportamento              Int      @db.Integer
  comunicacao                Int      @db.Integer
  integridade_cutaneo_mucosa Int      @db.Integer
  tipo_cuidado_pontuacao     Int      @db.Integer
  tipo_cuidado_classificacao Int      @db.Integer
  criado_em                  DateTime @default(now()) @db.Timestamp
  atualizado_em              DateTime @updatedAt @db.Timestamp

  id_idoso BigInt @db.BigInt
  idoso    Idoso  @relation(fields: [id_idoso], references: [id])

  id_usuario BigInt  @db.BigInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id])

  @@map("perroca")
}

model EscalaBraden {
  id                   BigInt   @id @default(autoincrement()) @db.BigInt
  uid                  String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pontuacao_escala     String   @db.VarChar(255)
  percepcao_sensorial  String   @db.VarChar(255)
  umidade              String   @db.VarChar(255)
  atividade            String   @db.VarChar(255)
  mobilidade           String   @db.VarChar(255)
  nutricao             String   @db.VarChar(255)
  friccao_cisalhamento String   @db.VarChar(255)
  criado_em            DateTime @default(now()) @db.Timestamp
  atualizado_em        DateTime @updatedAt @db.Timestamp

  id_idoso BigInt @db.BigInt
  idoso    Idoso  @relation(fields: [id_idoso], references: [id])

  id_usuario BigInt  @db.BigInt
  usuario    Usuario @relation(fields: [id_usuario], references: [id])

  @@map("escala_braden")
}
